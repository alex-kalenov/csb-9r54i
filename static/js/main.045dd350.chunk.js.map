{"version":3,"sources":["components/Result/Circle.module.css","components/Result/Position.module.css","components/Result/Result.module.css","components/Inputs/Inputs.module.css","components/Inputs/Input.module.css","components/Result/Positions.module.css","helpers/functions.js","store/circle-context.js","components/Inputs/Input.js","components/Inputs/Inputs.js","components/Result/Circle.js","components/Result/Position.js","components/Result/Positions.js","components/Result/Result.js","App.js","index.js"],"names":["module","exports","getPreparedColor","index","colors","length","Math","floor","CircleContext","React","createContext","positions","winner","blocked","round","setPositions","array","setWinner","CircleContextProvider","props","useState","setStateWinner","setRound","setBlocked","useEffect","setTimeout","value","max","winnerIndex","random","state","Provider","children","Input","edited","setEdited","inputRef","useRef","id","number","className","styles","wrapper","htmlFor","type","ref","onClick","inputValue","current","onAdd","Inputs","circleCtx","useContext","localPos","setLocalPos","inputs","setInputs","addLocalPos","useCallback","pos","numb","map","item","text","color","concat","onSubmit","event","preventDefault","submit","Circle","windowWidth","window","innerWidth","circleSize","angle","borderLength","deg","rad","PI","tan","getTanDeg","borderRule","circleStyle","width","height","transform","sectors","style","borderBottom","borderRight","borderLeft","borderTop","mark","Position","disabled","positionClass","backgroundColor","Positions","renderPositions","position","Result","buttonClass","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.045dd350.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"meta-wrapper\":\"Circle_meta-wrapper__OPJxj\",\"wrapper\":\"Circle_wrapper__2_ifb\",\"mark\":\"Circle_mark__2U6yv\",\"triangle\":\"Circle_triangle__uY47X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Position_wrapper__2PY_z\",\"color\":\"Position_color__2jbOh\",\"disabled\":\"Position_disabled__1Zo6O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Result_wrapper__gfEiK\",\"rest\":\"Result_rest__3xWcF\",\"blocked\":\"Result_blocked__hmfEG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Inputs_wrapper__18frC\",\"submit\":\"Inputs_submit__2AO2u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Input_wrapper__3t9lJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"Positions_position__3BvXI\"};","// export const getRandomColor = () => {\r\n//   const randomColor = Math.floor(Math.random() * 16777215).toString(16);\r\n//   return \"#\" + randomColor;\r\n// };\r\n\r\nexport const getPreparedColor = (index) => {\r\n  const colors = [\r\n    \"#4b8fb1\",\r\n    \"#f4755c\",\r\n    \"#64c492\",\r\n    \"#dfa388\",\r\n    \"#491fb3\",\r\n    \"#df123c\",\r\n    \"#5d3f57\",\r\n    \"#3b6bac\",\r\n    \"#fedc0c\",\r\n    \"#6d3a5d\"\r\n  ];\r\n\r\n  const length = colors.length;\r\n\r\n  const colorIndex = index - length * Math.floor(index / length);\r\n\r\n  return colors[colorIndex + (Math.floor(index / length) > 0 ? 1 : 0)];\r\n};\r\n\r\nexport function getTanDeg(deg) {\r\n  var rad = (deg * Math.PI) / 180;\r\n  return Math.tan(rad);\r\n}\r\n\r\nexport function getRandomInt(max) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getRandomInt } from \"../helpers/functions\";\r\n\r\nconst CircleContext = React.createContext({\r\n  positions: [],\r\n  winner: null,\r\n  blocked: false,\r\n  round: 0,\r\n  setPositions: (array) => {},\r\n  setWinner: () => {}\r\n});\r\n\r\nconst DUMMY_POS = [\r\n  { text: \"Понедельник\", color: \"#4b8fb1\" },\r\n  { text: \"Вторник\", color: \"#f4755c\" },\r\n  { text: \"Среда\", color: \"#64c492\" }\r\n  // { text: \"Любой другой день недели\", color: \"#dfa388\" }\r\n];\r\n\r\nexport const CircleContextProvider = (props) => {\r\n  const [positions, setPositions] = useState([]);\r\n  const [winner, setStateWinner] = useState(null);\r\n  const [round, setRound] = useState(0);\r\n  const [blocked, setBlocked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (winner !== null) {\r\n      setTimeout(() => {\r\n        setBlocked(false);\r\n      }, 10000);\r\n    }\r\n  }, [winner, round]);\r\n\r\n  const setWinner = () => {\r\n    if (blocked) return;\r\n    const winnerIndex = getRandomInt(positions.length);\r\n    setBlocked(true);\r\n    setStateWinner(winnerIndex);\r\n    setRound((state) => state + 1);\r\n  };\r\n\r\n  const value = {\r\n    positions,\r\n    winner,\r\n    blocked: blocked,\r\n    round,\r\n    setPositions,\r\n    setWinner\r\n  };\r\n\r\n  return (\r\n    <CircleContext.Provider value={value}>\r\n      {props.children}\r\n    </CircleContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CircleContext;\r\n","import styles from \"./Input.module.css\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nconst Input = (props) => {\r\n  const [edited, setEdited] = useState(false);\r\n  const inputRef = useRef();\r\n  const id = `input-number-${props.number}`;\r\n\r\n  const clickHandler = () => {\r\n    const inputValue = inputRef.current.value;\r\n    if (!inputValue.length) return;\r\n    props.onAdd(inputValue, edited, props.number);\r\n    setEdited(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <label htmlFor={id}>Позиция № {props.number}</label>\r\n      <input type=\"text\" id={id} ref={inputRef} />\r\n      <button type=\"button\" onClick={clickHandler}>\r\n        {edited ? \"Изменить\" : \"Добавить\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import styles from \"./Inputs.module.css\";\r\nimport { useCallback, useEffect, useState, useContext } from \"react\";\r\nimport Input from \"./Input\";\r\nimport { getPreparedColor } from \"../../helpers/functions\";\r\nimport CircleContext from \"../../store/circle-context\";\r\n\r\nconst Inputs = (props) => {\r\n  const circleCtx = useContext(CircleContext);\r\n  const [localPos, setLocalPos] = useState([]);\r\n  const [inputs, setInputs] = useState([]);\r\n\r\n  const addLocalPos = useCallback((pos, edited, numb) => {\r\n    if (edited) {\r\n      setLocalPos((state) =>\r\n        state.map((item, index) => {\r\n          if (index === numb - 1) return { text: pos, color: item.color };\r\n          return item;\r\n        })\r\n      );\r\n      return;\r\n    }\r\n    setLocalPos((state) =>\r\n      state.concat({\r\n        text: pos,\r\n        color: getPreparedColor(state.length)\r\n      })\r\n    );\r\n    setInputs((state) => {\r\n      const number = state.length + 1;\r\n      return state.concat(\r\n        <div key={number} className=\"col-xl-6 col-12\">\r\n          {\" \"}\r\n          <Input number={number} onAdd={addLocalPos} />\r\n        </div>\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  const approvePositions = (event) => {\r\n    event.preventDefault();\r\n    circleCtx.setPositions(localPos);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInputs((state) =>\r\n      state.concat(\r\n        <div key=\"1\" className=\"col-xl-6 col-12\">\r\n          <Input number=\"1\" onAdd={addLocalPos} />\r\n        </div>\r\n      )\r\n    );\r\n  }, [addLocalPos]);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <span>Введите позиции розыгрыша</span>\r\n      <div>\r\n        <form onSubmit={approvePositions}>\r\n          <div className=\"row\">{inputs}</div>\r\n          {localPos.length > 2 && (\r\n            <button type=\"submit\" className={styles.submit}>\r\n              Подтвердить\r\n            </button>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inputs;\r\n","import styles from \"./Circle.module.css\";\r\nimport { getTanDeg } from \"../../helpers/functions\";\r\nimport React, { useContext } from \"react\";\r\nimport CircleContext from \"../../store/circle-context\";\r\n\r\nconst Circle = (props) => {\r\n  const circleCtx = useContext(CircleContext);\r\n  const { positions, winner, round } = circleCtx;\r\n\r\n  const windowWidth = window.innerWidth;\r\n  let circleSize = 600;\r\n  if (windowWidth < 1200) {\r\n    circleSize = 400;\r\n  }\r\n  if (windowWidth < 992) {\r\n    circleSize = 250;\r\n  }\r\n\r\n  const angle = 360 / positions.length;\r\n  const borderLength = (circleSize / 2) * getTanDeg(angle / 2);\r\n  const borderRule = `${borderLength}px solid transparent`;\r\n\r\n  let circleStyle = { width: circleSize, height: circleSize };\r\n  if (winner !== null) {\r\n    circleStyle = {\r\n      ...circleStyle,\r\n      transform: `rotate(-${angle * winner + round * 360}deg)`\r\n    };\r\n  }\r\n\r\n  const sectors = positions.map((item, index) => {\r\n    const style = {\r\n      transform: `translateX(-50%) rotate(${angle * index}deg)`,\r\n      borderBottom: `${circleSize / 2}px solid ${item.color}`,\r\n      borderRight: borderRule,\r\n      borderLeft: borderRule,\r\n      borderTop: `${circleSize / 2}px solid transparent`\r\n    };\r\n\r\n    return (\r\n      <div key={index} className={styles[\"triangle\"]} style={style}>\r\n        <div>{index + 1}</div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={styles[\"meta-wrapper\"]}>\r\n      <div className={styles.wrapper} style={circleStyle}>\r\n        {sectors}\r\n      </div>\r\n      <div className={styles.mark}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Circle;\r\n","import styles from \"./Position.module.css\";\r\n\r\nconst Position = (props) => {\r\n  const { disabled } = props;\r\n  const positionClass = `${styles.wrapper} ${disabled ? styles.disabled : \"\"}`;\r\n\r\n  return (\r\n    <div className={positionClass}>\r\n      <div className={styles.color} style={{ backgroundColor: props.color }}>\r\n        {props.index + 1}\r\n      </div>\r\n      <span>{props.children}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Position;\r\n","import { useContext } from \"react\";\r\nimport CircleContext from \"../../store/circle-context\";\r\nimport Position from \"./Position\";\r\nimport style from \"./Positions.module.css\";\r\n\r\nconst Positions = () => {\r\n  const circleCtx = useContext(CircleContext);\r\n\r\n  const renderPositions = circleCtx.positions.map((item, index) => {\r\n    const { winner, blocked } = circleCtx;\r\n    const disabled = winner !== null && index !== winner && !blocked;\r\n\r\n    return (\r\n      <div key={index} className={`col-12 col-sm-6 ${style.position}`}>\r\n        <Position color={item.color} index={index} disabled={disabled}>\r\n          {item.text}\r\n        </Position>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <div className=\"row\">{renderPositions}</div>;\r\n};\r\n\r\nexport default Positions;\r\n","import Circle from \"./Circle\";\r\nimport Positions from \"./Positions\";\r\nimport styles from \"./Result.module.css\";\r\nimport { useContext } from \"react\";\r\nimport CircleContext from \"../../store/circle-context\";\r\n\r\nconst Result = (props) => {\r\n  const circleCtx = useContext(CircleContext);\r\n\r\n  const buttonClass = !circleCtx.blocked ? \"\" : styles.blocked;\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Circle />\r\n      <div className={styles[\"rest\"]}>\r\n        <button onClick={circleCtx.setWinner} className={buttonClass}>\r\n          ПУСК\r\n        </button>\r\n        <Positions />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import Inputs from \"./components/Inputs/Inputs\";\nimport Result from \"./components/Result/Result\";\nimport \"./styles.css\";\nimport { useContext } from \"react\";\nimport CircleContext from \"./store/circle-context\";\n\nexport default function App() {\n  const circleCtx = useContext(CircleContext);\n\n  return (\n    <div className=\"wrapper\">\n      {!circleCtx.positions.length ? <Inputs /> : <Result />}\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport { CircleContextProvider } from \"./store/circle-context\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <CircleContextProvider>\n    <App />\n  </CircleContextProvider>,\n  rootElement\n);\n"],"sourceRoot":""}